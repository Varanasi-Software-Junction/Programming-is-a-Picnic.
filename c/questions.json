[
    {
        "qno": 1,
        "question": "What is a token in C?",
        "options": ["Smallest individual unit", "A program", "A function", "A compiler"],
        "correct": 0,
        "explanation": "In C programming, a token is the smallest individual unit that has meaning."
    },
    {
        "qno": 2,
        "question": "Which is a valid identifier?",
        "options": ["2variable", "_myVar", "char", "#define"],
        "correct": 1,
        "explanation": "Identifiers in C can start with an underscore or a letter."
    },
    {
        "qno": 3,
        "question": "Which of the following is a high-level language?",
        "options": ["Assembly language", "Machine language", "C", "Binary language"],
        "correct": 2,
        "explanation": "C is a high-level language that abstracts hardware details from the programmer."
    },
    {
        "qno": 4,
        "question": "Which of these is not a keyword in C?",
        "options": ["if", "else", "main", "do"],
        "correct": 2,
        "explanation": "'main' is a special function in C but not a keyword."
    },
    {
        "qno": 5,
        "question": "What is the size of an int in C?",
        "options": ["2 bytes", "4 bytes", "Depends on the system", "1 byte"],
        "correct": 2,
        "explanation": "The size of int depends on the architecture (16-bit, 32-bit, etc.)."
    },
    {
        "qno": 6,
        "question": "Which operator is used to get the address of a variable?",
        "options": ["&", "*", "%", "#"],
        "correct": 0,
        "explanation": "The ampersand (&) operator gives the memory address of a variable."
    },
    {
        "qno": 7,
        "question": "What is a literal in C?",
        "options": ["A constant value", "A variable", "A pointer", "A loop"],
        "correct": 0,
        "explanation": "A literal is a fixed value, like a number or string, used directly in the code."
    },
    {
        "qno": 8,
        "question": "What does 'char' represent in C?",
        "options": ["Character type", "A pointer", "A function", "None of the above"],
        "correct": 0,
        "explanation": "'char' is a data type in C used to represent characters."
    },
    {
        "qno": 9,
        "question": "Which of the following is a valid data type in C?",
        "options": ["float", "integer", "string", "boolean"],
        "correct": 0,
        "explanation": "'float' is a valid data type. 'integer' and 'string' are not C data types, and C doesn't have a built-in 'boolean'."
    },
    {
        "qno": 10,
        "question": "Which of the following is an arithmetic operator in C?",
        "options": ["+", "&&", "||", "<"],
        "correct": 0,
        "explanation": "'+' is an arithmetic operator, while '&&' and '||' are logical operators."
    },
    {
        "qno": 11,
        "question": "Which function is used to output to the console in C?",
        "options": ["print()", "printf()", "console.log()", "output()"],
        "correct": 1,
        "explanation": "'printf()' is used to output text to the console in C."
    },
    {
        "qno": 12,
        "question": "Which function is used to take input from the user in C?",
        "options": ["input()", "scanf()", "get()", "cin"],
        "correct": 1,
        "explanation": "'scanf()' is used to take user input in C."
    },
    {
        "qno": 13,
        "question": "What is an array in C?",
        "options": ["A collection of variables", "A collection of elements of the same type", "A function", "A pointer"],
        "correct": 1,
        "explanation": "An array is a collection of elements of the same type stored at contiguous memory locations."
    },
    {
        "qno": 14,
        "question": "Which of these are types of loops in C?",
        "options": ["for", "do-while", "while", "All of the above"],
        "correct": 3,
        "explanation": "All of the options (for, do-while, while) are valid loop types in C."
    },
    {
        "qno": 15,
        "question": "What is a pointer?",
        "options": ["A variable that stores memory address", "A function", "A loop", "A condition"],
        "correct": 0,
        "explanation": "A pointer is a variable that stores the memory address of another variable."
    },
    {
        "qno": 16,
        "question": "What is the purpose of the 'return' keyword?",
        "options": ["Exit a function", "Loop control", "Memory management", "I/O operation"],
        "correct": 0,
        "explanation": "'return' is used to exit a function and optionally return a value."
    },
    {
        "qno": 17,
        "question": "Which operator is used for multiplication in C?",
        "options": ["*", "x", "&", "%"],
        "correct": 0,
        "explanation": "'*' is used for multiplication in C."
    },
    {
        "qno": 18,
        "question": "What does 'void' mean in C?",
        "options": ["No return value", "Memory", "Loop", "Pointer"],
        "correct": 0,
        "explanation": "'void' indicates that a function does not return any value."
    },
    {
        "qno": 19,
        "question": "Which of these is a valid conditional operator in C?",
        "options": ["&&", "++", "--", "*"],
        "correct": 0,
        "explanation": "'&&' is a logical AND operator, which is a valid conditional operator."
    },
    {
        "qno": 20,
        "question": "What does 'sizeof' do in C?",
        "options": ["Returns the size of a data type", "Performs division", "Returns a pointer", "Executes a loop"],
        "correct": 0,
        "explanation": "'sizeof' returns the size of a data type or variable."
    },
    {
        "qno": 21,
        "question": "Which of these is an example of a relational operator?",
        "options": ["==", "+", "*", "!"],
        "correct": 0,
        "explanation": "'==' is used to compare two values, making it a relational operator."
    },
    {
        "qno": 22,
        "question": "What is an identifier in C?",
        "options": ["Name of a variable or function", "A keyword", "A data type", "A constant"],
        "correct": 0,
        "explanation": "An identifier is the name given to a variable, function, or other user-defined entity."
    },
    {
        "qno": 23,
        "question": "What is the correct syntax to declare a pointer?",
        "options": ["int *p;", "int p;", "pointer int p;", "int& p;"],
        "correct": 0,
        "explanation": "'int *p;' declares a pointer to an integer in C."
    },
    {
        "qno": 24,
        "question": "What is a keyword?",
        "options": ["A reserved word", "An identifier", "A function", "A variable"],
        "correct": 0,
        "explanation": "A keyword is a reserved word in C that has a special meaning."
    },
    {
        "qno": 25,
        "question": "Which of the following is a valid C header file?",
        "options": ["stdio.h", "iostream", "system.h", "corelib.h"],
        "correct": 0,
        "explanation": "'stdio.h' is a standard C library header file."
    },
    {
        "qno": 26,
        "question": "Which of these is a type specifier in C?",
        "options": ["int", "if", "else", "while"],
        "correct": 0,
        "explanation": "'int' is a type specifier that declares an integer."
    },
    {
        "qno": 27,
        "question": "What is an array index?",
        "options": ["The position of an element", "The name of the array", "A pointer", "A keyword"],
        "correct": 0,
        "explanation": "An array index is the position of an element in an array, starting from 0."
    },
    {
        "qno": 28,
        "question": "What does 'break' do in a loop?",
        "options": ["Terminates the loop", "Continues the loop", "Repeats the loop", "Starts a new iteration"],
        "correct": 0,
        "explanation": "'break' terminates the loop and exits."
    },
    {
        "qno": 29,
        "question": "What is a low-level language?",
        "options": ["Assembly or machine language", "High-level programming language", "An interpreted language", "None of the above"],
        "correct": 0,
        "explanation": "Low-level languages like assembly or machine code are closer to hardware."
    },
    {
        "qno": 30,
        "question": "Which of these is a unary operator in C?",
        "options": ["++", "+", "-", "&&"],
        "correct": 0,
        "explanation": "'++' is a unary operator that increments a value."
    },
    {
        "qno": 31,
        "question": "Which function is used to allocate memory in C?",
        "options": ["malloc()", "alloc()", "memory()", "init()"],
        "correct": 0,
        "explanation": "'malloc()' is used to allocate memory dynamically in C."
    },
    {
        "qno": 32,
        "question": "What is recursion?",
        "options": ["A function calling itself", "A loop", "An operator", "A data structure"],
        "correct": 0,
        "explanation": "Recursion is when a function calls itself."
    },
    {
        "qno": 33,
        "question": "What is a constant?",
        "options": ["A fixed value", "A variable", "An operator", "A function"],
        "correct": 0,
        "explanation": "A constant is a fixed value that cannot be changed during program execution."
    },
    {
        "qno": 34,
        "question": "Which operator is used for division in C?",
        "options": ["/", "%", "*", "//"],
        "correct": 0,
        "explanation": "'/' is used for division in C."
    },
    {
        "qno": 35,
        "question": "What does 'int main()' signify?",
        "options": ["Main function that returns an integer", "A header file", "A type specifier", "An operator"],
        "correct": 0,
        "explanation": "'int main()' signifies the main function that returns an integer value."
    },
    {
        "qno": 36,
        "question": "Which operator is used for modulus (remainder) in C?",
        "options": ["%", "*", "&", "mod"],
        "correct": 0,
        "explanation": "'%' is used for modulus operation, which gives the remainder."
    },
    {
        "qno": 37,
        "question": "What is an interpreted language?",
        "options": ["Language executed line-by-line", "Language compiled into machine code", "Language written in assembly", "None of the above"],
        "correct": 0,
        "explanation": "An interpreted language is executed line-by-line by an interpreter."
    },
    {
        "qno": 38,
        "question": "What is a compiler?",
        "options": ["A program that converts high-level code to machine code", "A text editor", "A debugger", "An operating system"],
        "correct": 0,
        "explanation": "A compiler translates high-level source code into machine code."
    },
    {
        "qno": 39,
        "question": "What is the purpose of a header file in C?",
        "options": ["To declare functions and macros", "To store the main function", "To initialize variables", "To control program flow"],
        "correct": 0,
        "explanation": "Header files contain declarations of functions, macros, and constants."
    },
    {
        "qno": 40,
        "question": "Which of the following is a preprocessor directive?",
        "options": ["#include", "for", "if", "main"],
        "correct": 0,
        "explanation": "'#include' is a preprocessor directive used to include header files."
    },
    {
        "qno": 41,
        "question": "What does 'NULL' represent in C?",
        "options": ["A null pointer", "Zero", "A string", "An integer"],
        "correct": 0,
        "explanation": "'NULL' is a macro representing a null pointer."
    },
    {
        "qno": 42,
        "question": "Which operator is used for logical AND in C?",
        "options": ["&&", "&", "||", "!"],
        "correct": 0,
        "explanation": "'&&' is the logical AND operator in C."
    },
    {
        "qno": 43,
        "question": "What is typecasting?",
        "options": ["Converting a variable from one data type to another", "A type of loop", "A condition", "A function"],
        "correct": 0,
        "explanation": "Typecasting is the process of converting a variable from one data type to another."
    },
    {
        "qno": 44,
        "question": "Which of the following is a binary operator?",
        "options": ["&&", "&", "++", "--"],
        "correct": 1,
        "explanation": "'&' is a binary operator used for bitwise AND."
    },
    {
        "qno": 45,
        "question": "What does 'fprintf' do in C?",
        "options": ["Writes formatted output to a file", "Takes user input", "Prints to the console", "None of the above"],
        "correct": 0,
        "explanation": "'fprintf()' is used to write formatted output to a file."
    },
    {
        "qno": 46,
        "question": "What is a structure in C?",
        "options": ["A user-defined data type", "A loop", "An operator", "A function"],
        "correct": 0,
        "explanation": "A structure is a user-defined data type in C that groups different data types."
    },
    {
        "qno": 47,
        "question": "Which of these is a valid escape sequence in C?",
        "options": ["\\n", "/n", "//", "\\"],
        "correct": 0,
        "explanation": "'\\n' is the escape sequence for a new line in C."
    },
    {
        "qno": 48,
        "question": "What is a 'double' in C?",
        "options": ["A data type for floating-point numbers", "An operator", "A function", "A loop"],
        "correct": 0,
        "explanation": "'double' is a data type used for storing floating-point numbers with double precision."
    },
    {
        "qno": 49,
        "question": "What does 'return 0;' signify in C?",
        "options": ["Successful execution of the program", "An error in the program", "A loop termination", "Memory allocation"],
        "correct": 0,
        "explanation": "'return 0;' is commonly used to indicate that the program executed successfully."
    },
    {
        "qno": 50,
        "question": "What does the 'goto' statement do?",
        "options": ["Transfers control to another part of the program", "Starts a loop", "Ends a program", "Continues the current function"],
        "correct": 0,
        "explanation": "The 'goto' statement transfers control to another part of the program."
    }
]
